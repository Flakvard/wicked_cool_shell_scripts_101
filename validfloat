#!/bin/bash

# validfloat--Test whether a number is a valid floating-point value.
# Note that this script cannot accept scientific (1.304e5) notation.

# To test whether an entered value is a valid floating-point number,
# we need to split into two parts: the interger portion
# and the fractional portion. We test the first part to see whether
# it's a valid integer. So -30.5 evaluates as valid, but -30.-8 doesn't.

# To include another shell script as part of this one, use the "." source
# notation. Easy enough.

. validint

validfloat()
{
  fvalue=$1

  # Check whether the input number has a decimal point.
  if [ ! -z $(echo $fvalue |Â sed 's/[^.]//g') ] ; then

    # Extract the part before the decimal point.
    decimalPart=$(echo $fvalue | cut -d. -f1)
}
